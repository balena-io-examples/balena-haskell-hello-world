# FROM balenalib/%%BALENA_MACHINE_NAME%%-debian:latest-build as build
FROM arm64v8/haskell:8.10 as build

WORKDIR /usr/src/balena-haskell-hello-world
SHELL ["/bin/bash", "-c"] 

# install ghcup
# RUN curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_MINIMAL=1 bash

# ARG GHC=8.6.5
# ARG CABAL=latest

# # Add ghcup to PATH
# ENV PATH=${PATH}:/root/.local/bin
# ENV PATH=${PATH}:/root/.ghcup/bin

# # install GHC and cabal
# RUN \
# 	ghcup -v install ghc --isolate /usr/local --force ${GHC} && \
# 	ghcup -v install cabal --isolate /usr/local/bin --force ${CABAL}

# Update Path to include Cabal and GHC exports
# RUN bash -c "echo PATH="$HOME/.local/bin:$PATH" >> $HOME/.bashrc"
# RUN bash -c "echo export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH" >> $HOME/.bashrc"
# RUN bash -c "source $HOME/.bashrc"

RUN cabal update && cabal install cabal-install && cabal user-config update

# Add just the .cabal file to capture dependencies
COPY *.cabal ./

# Docker will cache this command as a layer, freeing us up to
# modify source code without re-installing dependencies
# (unless the .cabal file changes!)
RUN cabal build --only-dependencies -j4

# Add and Install Application Code
COPY src/ src/

RUN cabal install

FROM balenalib/%%BALENA_MACHINE_NAME%%-alpine:latest-run 

WORKDIR /usr/src/balena-haskell-hello-world

COPY --from=build /usr/src/balena-haskell-hello-world/src/ src/
COPY views/ views/

# CMD [ "./src/Main" ] 
CMD [ "tail", "-f", "/dev/null" ] 